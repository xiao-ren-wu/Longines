<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.longines.dao.TbCollectionMapper" >
  <resultMap id="BaseResultMap" type="com.longines.pojo.TbCollection" >
    <id column="u_id" property="uId" jdbcType="INTEGER" />
    <id column="g_id" property="gId" jdbcType="INTEGER" />
    <result column="coll_time" property="collTime" jdbcType="TIMESTAMP" />
    <result column="c_price" property="cPrice" jdbcType="DECIMAL" />
    <result column="pur" property="pur" jdbcType="INTEGER" />
    <result column="invalid" property="invalid" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    u_id, g_id, coll_time, c_price, pur, invalid, createtime, updatetime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.longines.pojo.TbCollectionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_collection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.longines.pojo.TbCollectionKey" >
    delete from tb_collection
    where u_id = #{uId,jdbcType=INTEGER}
      and g_id = #{gId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.longines.pojo.TbCollection" >
    insert into tb_collection (u_id, g_id, coll_time, 
      c_price, pur, invalid
      )
    values (#{uId,jdbcType=INTEGER}, #{gId,jdbcType=INTEGER}, #{collTime,jdbcType=TIMESTAMP}, 
      #{cPrice,jdbcType=DECIMAL}, #{pur,jdbcType=INTEGER}, #{invalid,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.longines.pojo.TbCollection" >
    update tb_collection
    <set >
      <if test="collTime != null" >
        coll_time = #{collTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cPrice != null" >
        c_price = #{cPrice,jdbcType=DECIMAL},
      </if>
      <if test="pur != null" >
        pur = #{pur,jdbcType=INTEGER},
      </if>
      <if test="invalid != null" >
        invalid = #{invalid,jdbcType=INTEGER},
      </if>
    </set>
    where u_id = #{uId,jdbcType=INTEGER}
      and g_id = #{gId,jdbcType=INTEGER}
  </update>

  <resultMap type="com.longines.pojo.TbCollection" id="OrdersAndDetailRstMap">
    <result column="price" property="cPrice" />
    <result column="inv" property="invalid" />
  </resultMap>

  <select id="findCollection"  parameterType="Integer" resultMap="OrdersAndDetailRstMap">
		SELECT
		tb_goods_info.price,tb_mg_associated.inv
		from
		tb_goods_info,tb_mg_associated
        WHERE
        tb_goods_info.g_id = #{id}
        and
        tb_mg_associated.g_id=#{id}
	</select>
  <select id="findCollectionGoods" parameterType="com.longines.pojo.TbCollection" resultType="com.longines.vo.TbCollectionVo">
    SELECT tb_goods_info.gname,tb_goods_info.g_pic,tb_collection.pur,tb_collection.invalid
    from tb_goods_info inner join tb_collection on tb_goods_info.g_id=tb_collection.g_id where tb_collection.u_id = #{uId} AND tb_collection.g_id=#{gId}
  </select>

  <select id="collectionPur" parameterType="com.longines.pojo.TbCollection" resultType="Integer">
    SELECT tb_order.g_id from tb_pay inner join tb_order on tb_pay.o_id = tb_order.o_id where tb_pay.u_id=#{uId} and tb_order.g_id=#{gId}
  </select>
  <select id="selectCollection" parameterType="com.longines.pojo.TbCollectionKey" resultType="Integer">
    SELECT  u_id from tb_collection where  u_id=#{uId} and g_id=#{gId}
  </select>
</mapper>